=> SO_REUSEADDR is an option that allows you to reuse local addresses.

=> The poll function in C/C++ is used for monitoring multiple file descriptors 
to see if any of them become ready for I/O operations. 

=> struct pollfd objects, where each object represents a file descriptor you want to monitor. 
Each struct pollfd contains the file descriptor (fd) and events to monitor (events).

=> events field to specify the events you're interested in , POLLIN for data to read .

=> revents field to check for specific events , POLLIN for data to read .

=> int poll(struct pollfd *fds, nfds_t nfds, int timeout);

struct pollfd {
    int fd;         // file descriptor to be monitored
    short events;   // events to monitor (input and output events)
    short revents;  // returned events (output only)
};

returns the number of file descriptors that have events , errors returns -1

=> fcntl: used for file control.

int fcntl(int fd, int cmd, ... /* arg */);

in network programming, "blocking" refers to a situation where a program halts its execution until a particular operation completes .
when you try to read data from a socket in blocking mode and there's no data available, the program will wait until data arrives before proceeding.

_SETFL: a flag used to indicate that you want to set the file status flags of the specified file descriptor. 

O_NONBLOCK: This is a flag that indicates non-blocking mode. 
When set on a socket, it means that I/O operations on that socket won't block 
the calling process even if there is no data available.



///////// ERRORS ////////////////
#define ERR_NEEDMODEPARM(channelname, mode) (": 696 #" + channelname + " * You must specify a parameter for the key mode. " + mode + CRLF)
#define ERR_INVALIDMODEPARM(channelname, mode) ": 696 #" + channelname + " Invalid mode parameter. " + mode + CRLF
#define ERR_KEYSET(channelname) ": 467 #" + channelname + " Channel key already set. " + CRLF
#define ERR_UNKNOWNMODE(nickname, channelname, mode) ": 472 " + nickname + " #" + channelname + " " + mode + " :is not a recognised channel mode" + CRLF
#define ERR_NOTENOUGHPARAM(nickname) (": 461 " + nickname + " :Not enough parameters." + CRLF)
#define ERR_CHANNELNOTFOUND(nickname, channelname) (": 403 " + nickname + " " + channelname + " :No such channel" + CRLF)
#define ERR_NOTOPERATOR(channelname) (": 482 #" + channelname + " :You're not a channel operator" + CRLF)
#define ERR_NOSUCHNICK(channelname, name) (": 401 #" + channelname + " " + name + " :No such nick/channel" + CRLF )
#define ERR_INCORPASS(nickname) (": 464 " + nickname + " :Password incorrect !" + CRLF )
#define ERR_ALREADYREGISTERED(nickname) (": 462 " + nickname + " :You may not reregister !" + CRLF )
#define ERR_NONICKNAME(nickname) (": 431 " + nickname + " :No nickname given" + CRLF )
#define ERR_NICKINUSE(nickname) (": 433 " + nickname + " :Nickname is already in use" + CRLF)
#define ERR_ERRONEUSNICK(nickname) (": 432 " + nickname + " :Erroneus nickname" + CRLF)
#define ERR_NOTREGISTERED(nickname) (": 451 " + nickname + " :You have not registered!" + CRLF)
#define ERR_CMDNOTFOUND(nickname, command) (": 421 " + nickname + " " + command + " :Unknown command" + CRLF)